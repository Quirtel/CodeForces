{% for type in types.structs|annotated:"RealmPersistable" %}
// sourcery:file:Generated/{{ type.name }}+RealmStruct
import RealmSwift
 
{% set objectForCoding %}{{ type.name|lowerFirstWord }}{% endset %}
final class {{ type.name }}Object: Object {
{% for variable in type.variables %}    @objc dynamic var {{ variable.name }}: {{ variable.typeName }} = {% if variable.typeName.name == "String" %}""{% elif variable.typeName.name == "Int" %}0{% elif variable.typeName.name == "Bool" %}false{% elif variable.typeName.isOptional %}nil{% else %}completeRealmExpression{% endif %}
{% endfor %}
 
    override static func primaryKey() -> String? {
        return "id"
    }
}
 
extension {{ type.name }}: RealmRepresentable {
    var realmObject: {{ type.name }}Object {
        let {{ objectForCoding }} = {{ type.name }}Object()
        {% for variable in type.storedVariables %}
        {{ objectForCoding }}.{{ variable.name }} = {{ variable.name }}
        {% endfor %}
 
        return {{ objectForCoding }}
    }
}
 
extension {{ type.name }}Object: StructRepresentable {
    var `struct`: {{ type.name }} {
        return {{ type.name }}({% for variable in type.storedVariables %}{{ variable.name }}: {{ variable.name }}{% if not forloop.last %}, {% endif %}{% endfor %})
    }
}
// sourcery:end
{% endfor %}
